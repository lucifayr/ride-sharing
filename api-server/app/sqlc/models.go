// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"database/sql"
)

type GroupMessage struct {
	ID        string         `json:"id"`
	GroupID   string         `json:"groupId"`
	Content   string         `json:"content"`
	SentBy    string         `json:"sentBy"`
	CreatedAt string         `json:"createdAt"`
	RepliesTo sql.NullString `json:"repliesTo"`
}

type Ride struct {
	ID             string `json:"id"`
	LocationFrom   string `json:"locationFrom"`
	LocationTo     string `json:"locationTo"`
	TackingPlaceAt string `json:"tackingPlaceAt"`
	CreatedBy      string `json:"createdBy"`
	Driver         string `json:"driver"`
	TransportLimit int64  `json:"transportLimit"`
	CreatedAt      string `json:"createdAt"`
}

type RideEvent struct {
	ID             string `json:"id"`
	RideID         string `json:"rideId"`
	LocationFrom   string `json:"locationFrom"`
	LocationTo     string `json:"locationTo"`
	Driver         string `json:"driver"`
	Status         string `json:"status"`
	TackingPlaceAt string `json:"tackingPlaceAt"`
	TransportLimit int64  `json:"transportLimit"`
}

type RideEventStatusOrdering struct {
	Status   string `json:"status"`
	Ordering int64  `json:"ordering"`
}

type RideGroup struct {
	ID          string         `json:"id"`
	Name        string         `json:"name"`
	CreatedBy   string         `json:"createdBy"`
	Description sql.NullString `json:"description"`
}

type RideGroupMember struct {
	GroupID    string `json:"groupId"`
	UserID     string `json:"userId"`
	JoinStatus string `json:"joinStatus"`
}

type RideGroupMembersJoinStatusOrdering struct {
	Status   string `json:"status"`
	Ordering int64  `json:"ordering"`
}

type RideParticipant struct {
	UserID      string `json:"userId"`
	RideEventID string `json:"rideEventId"`
}

type RideSchedule struct {
	ID               string `json:"id"`
	RideID           string `json:"rideId"`
	ScheduleInterval int64  `json:"scheduleInterval"`
	Unit             string `json:"unit"`
}

type RideScheduleWeekday struct {
	RideScheduleID string `json:"rideScheduleId"`
	Weekday        string `json:"weekday"`
}

type User struct {
	ID           string         `json:"id"`
	Name         string         `json:"name"`
	Email        string         `json:"email"`
	Provider     string         `json:"provider"`
	AccessToken  sql.NullString `json:"accessToken"`
	RefreshToken sql.NullString `json:"refreshToken"`
}
