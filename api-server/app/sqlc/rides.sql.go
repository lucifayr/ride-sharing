// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: rides.sql

package sqlc

import (
	"context"
)

const ridesCreate = `-- name: RidesCreate :one
INSERT INTO
    rides (
        location_from,
        location_to,
        tacking_place_at,
        create_by,
        driver
    )
VALUES
    (?, ?, ?, ?, ?) RETURNING id, location_from, location_to, tacking_place_at, create_by, driver
`

type RidesCreateParams struct {
	LocationFrom   string `json:"locationFrom"`
	LocationTo     string `json:"locationTo"`
	TackingPlaceAt string `json:"tackingPlaceAt"`
	CreateBy       string `json:"createBy"`
	Driver         string `json:"driver"`
}

// See sqlc docs for more information:
// https://docs.sqlc.dev/en/latest/tutorials/getting-started-sqlite.html#schema-and-queries
func (q *Queries) RidesCreate(ctx context.Context, arg RidesCreateParams) (Ride, error) {
	row := q.db.QueryRowContext(ctx, ridesCreate,
		arg.LocationFrom,
		arg.LocationTo,
		arg.TackingPlaceAt,
		arg.CreateBy,
		arg.Driver,
	)
	var i Ride
	err := row.Scan(
		&i.ID,
		&i.LocationFrom,
		&i.LocationTo,
		&i.TackingPlaceAt,
		&i.CreateBy,
		&i.Driver,
	)
	return i, err
}
